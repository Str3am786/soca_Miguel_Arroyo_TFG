{
    "description": [
        {
            "originalHeader": "Description",
            "excerpt": "Human-guided machine learning (HGML) is a hybrid approach where a user interacts with an AutoML system and tasks it to explore different problem settings that reflect the user\u2019s knowledge about the data available. \n\n",
            "parentHeader": [
                "P4ML-UI"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "excerpt": "This document explains the schema in restriction file of human-guided machine learning (HGML), in which the user provide their restriction requirement to our system.\n \n",
            "confidence": [
                [
                    0.979877596743196
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "Restriction File",
            "parentHeader": [
                "P4ML-UI"
            ]
        },
        {
            "excerpt": "-\tselect_training_and_test_data [status: not implemented]\n     - Definition: this flag allows you to select training and testing data, optionally with cross-validation specifications\n     - Parameters: dictionary includes the ids of instances to be the training and testing data, with optional cross-validation method \n     - Default value: if empty, the TA2 system will use the default method to get training and testing data.\n     - Example: \"select_training_and_testing_data\":{\u201ctraining_data\u201c:(1,1000) ,\u201dtesting_data\u201d:(1001,1200), \u201ccross_validation\u201d:\u201dk fold\u201d} \n-\tinclude_class_of_model [status: not implemented]\n     - Definition: this flag allows you to specify the class of model desired\n     - Parameters: An array of class of model. All primitives have to be registered as part of the primitive library of the TA2 system.\n     - Default value: if empty, the TA2 system will explore all possible pipelines\n     - Example: \"include_class_of_model\": [] \n-\tinclude_class_of_data_preparation_method [status: not implemented]\n     - Definition: this flag allows you to specify the class of data preparation method\n     - Parameters: An array of class of data preparation method. All primitives have to be registered as part of the primitive library of the TA2 system.\n     - Default value: if empty, the TA2 system will explore all possible pipelines\n     - Example: \"include_class_of_data_preparation_method\": [] \n",
            "confidence": [
                [
                    0.9009832408466774,
                    0.9175950005754346,
                    0.9436434147214843
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "Restriction Schema",
            "parentHeader": [
                "P4ML-UI",
                "Restriction File"
            ]
        },
        {
            "excerpt": "P4ML User Interaction project.",
            "confidence": [
                1.0
            ],
            "technique": "GitHub API"
        }
    ],
    "longTitle": {
        "excerpt": "P4ML-UI",
        "confidence": [
            1.0
        ],
        "technique": "Regular expression"
    },
    "run": [
        {
            "originalHeader": "How to run the planner",
            "excerpt": "go to the direcotry /P4ML-UI/dsbox-ta2/python\n```\npython ta2-search config.json restriction.json\n```\n",
            "parentHeader": [
                "P4ML-UI"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        }
    ],
    "codeRepository": {
        "excerpt": "https://github.com/KnowledgeCaptureAndDiscovery/P4ML-UI",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "owner": {
        "excerpt": "KnowledgeCaptureAndDiscovery",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "ownerType": {
        "excerpt": "Organization",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateCreated": {
        "excerpt": "2019-02-14T22:42:43Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateModified": {
        "excerpt": "2021-11-05T17:42:47Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "license": {
        "excerpt": {
            "name": "Apache License 2.0",
            "url": "https://api.github.com/licenses/apache-2.0"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "name": {
        "excerpt": "P4ML-UI",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "fullName": {
        "excerpt": "KnowledgeCaptureAndDiscovery/P4ML-UI",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "issueTracker": {
        "excerpt": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/P4ML-UI/issues",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksUrl": {
        "excerpt": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/P4ML-UI/forks",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "downloadUrl": {
        "excerpt": "https://github.com/KnowledgeCaptureAndDiscovery/P4ML-UI/releases",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "stargazersCount": {
        "excerpt": {
            "count": 1,
            "date": "Wed, 18 May 2022 20:59:04 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksCount": {
        "excerpt": {
            "count": 2,
            "date": "Wed, 18 May 2022 20:59:04 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "languages": {
        "excerpt": [
            "Python",
            "Jupyter Notebook",
            "Dockerfile",
            "Shell"
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "licenseText": {
        "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 \\nJason Corso, Laura Balzano and The University of Michigan DARPA D3M SPIDER Team\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "readmeUrl": {
        "excerpt": "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/P4ML-UI/master/README.md",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "contributingGuidelines": {
        "excerpt": "Contributing to the TA3-TA2 API\nChange proposals\nSuggested changes to the API can be made in one of two ways:\n\nBy logging issues against the repository.\nThrough merge requests.\n\nDiscussion of high level changes can be raised with the group and commented on using GitLab's issue tracking system.\nConcrete changes can be proposed by modifying code and submitting a merge request for review.\nMerge requests should be marked WIP in their title if they are being actively updated, with the tag being removed when the code is ready for final review.\nAll merge requests have to be against a devel branch.\nMerge requests should include also an entry to HISTORY.md with a summary of a change.\nCore vs. extensions\nThere are two classes of API defined in the system - core, defined in core.proto, and extensions, such as data_ext.proto, which are stored in separate files.  All TA2 systems must implement the core API, while extensions are considered optional.\nStyle\n\nAll changes to the .proto files should follow Google's Protobuf Style Guide.\nIndentation should be 4 spaces.\nProto file names should use snake_case, with extensions ending in _ext.  Example: dataflow_ext.proto",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "hasExecutableNotebook": {
        "excerpt": [
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/P4ML-UI/master/dsbox-corex/corex_topic/examples/corex-topic-example.ipynb"
        ],
        "confidence": [
            1.0
        ],
        "technique": "File Exploration",
        "format": "jupyter notebook"
    },
    "hasBuildFile": [
        {
            "excerpt": [
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/P4ML-UI/master/docker/python3/Dockerfile",
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/P4ML-UI/master/docker/python2/Dockerfile"
            ],
            "confidence": [
                1.0
            ],
            "technique": "File Exploration",
            "format": "Docker file"
        }
    ],
    "hasScriptFile": {
        "excerpt": [
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/P4ML-UI/master/dsbox-profiling/example_generator.sh"
        ],
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "inspect4py": {
        "software_type": "script",
        "run": "python /Users/dakixr/Desktop/github/scc/tmp/metadata/KnowledgeCaptureAndDiscoveryANDmintproject/P4ML-UI/dsbox-profiling/dsbox/datapreprocessing/profiler/data_profile.py"
    }
}