{
    "longTitle": {
        "excerpt": "transfer.sh    ",
        "confidence": [
            1.0
        ],
        "technique": "Regular expression"
    },
    "download": [
        {
            "originalHeader": "Download &amp; decrypt:",
            "excerpt": "Easy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive) providers, and local file system (local).\n\n## Usage\n\n### Upload:\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        }
    ],
    "license": {
        "excerpt": {
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "support": [
        {
            "originalHeader": "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
            "excerpt": "Easy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive) providers, and local file system (local).\n",
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Upload:",
            "excerpt": "$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n\n### Upload to virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n## Add alias to .bashrc or .zshrc\n\n### Using curl\n```bash\ntransfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename $1) | tee /dev/null;\n}\n\nalias transfer=transfer\n```\n\n### Using wget\n```bash\ntransfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type $1)\" https://transfer.sh/$(basename $1);\n}\n\nalias transfer=transfer\n```\n\n## Add alias for fish-shell\n\n### Using curl\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        # write to output to tmpfile because of progress bar\n        set -l tmpfile ( mktemp -t transferXXX )\n        curl --progress-bar --upload-file \"$argv[1]\" https://transfer.sh/(basename $argv[1]) >> $tmpfile\n        cat $tmpfile\n        command rm -f $tmpfile\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\n### Using wget\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        wget -t 1 -qO - --method=PUT --body-file=\"$argv[1]\" --header=\"Content-Type: (file -b --mime-type $argv[1])\" https://transfer.sh/(basename $argv[1])\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\nNow run it like this:\n```bash\n$ transfer test.txt\n```\n\n## Add alias on Windows\n\nPut a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development) | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, grdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n\n## Development\n\nMake sure your GOPATH is set correctly.\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\n```bash\ngo build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we've created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n## Copyright and license\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode released under [the MIT license](LICENSE).\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Encrypt &amp; upload:",
            "excerpt": "Easy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive) providers, and local file system (local).\n\n## Usage\n\n### Upload:\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n\n### Upload to virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n## Add alias to .bashrc or .zshrc\n\n### Using curl\n```bash\ntransfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename $1) | tee /dev/null;\n}\n\nalias transfer=transfer\n```\n\n### Using wget\n```bash\ntransfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type $1)\" https://transfer.sh/$(basename $1);\n}\n\nalias transfer=transfer\n```\n\n## Add alias for fish-shell\n\n### Using curl\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        # write to output to tmpfile because of progress bar\n        set -l tmpfile ( mktemp -t transferXXX )\n        curl --progress-bar --upload-file \"$argv[1]\" https://transfer.sh/(basename $argv[1]) >> $tmpfile\n        cat $tmpfile\n        command rm -f $tmpfile\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\n### Using wget\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        wget -t 1 -qO - --method=PUT --body-file=\"$argv[1]\" --header=\"Content-Type: (file -b --mime-type $argv[1])\" https://transfer.sh/(basename $argv[1])\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\nNow run it like this:\n```bash\n$ transfer test.txt\n```\n\n## Add alias on Windows\n\nPut a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development) | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, grdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n\n## Development\n\nMake sure your GOPATH is set correctly.\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\n```bash\ngo build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we've created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n## Copyright and license\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode released under [the MIT license](LICENSE).\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Upload to virustotal:",
            "excerpt": "$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Using curl",
            "excerpt": "transfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename $1) | tee /dev/null;\n}\n\nalias transfer=transfer\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Add alias for fish-shell"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Using wget",
            "excerpt": "transfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type $1)\" https://transfer.sh/$(basename $1);\n}\n\nalias transfer=transfer\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Add alias for fish-shell"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Add alias on Windows",
            "excerpt": "Put a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Link aliases",
            "excerpt": "Create direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development) | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, grdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Development",
            "excerpt": "Make sure your GOPATH is set correctly.\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Build",
            "excerpt": "```bash\ngo build -o transfersh main.go\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Docker",
            "excerpt": "For easy deployment, we've created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Contributions",
            "excerpt": "Contributions are welcome.\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Creators",
            "excerpt": "**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Maintainer",
            "excerpt": "**Andrea Spacca**\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        }
    ],
    "usage": [
        {
            "originalHeader": "Usage",
            "excerpt": "### Upload:",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Upload:",
            "excerpt": "$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n\n### Upload to virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n## Add alias to .bashrc or .zshrc\n\n### Using curl\n```bash\ntransfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename $1) | tee /dev/null;\n}\n\nalias transfer=transfer\n```\n\n### Using wget\n```bash\ntransfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type $1)\" https://transfer.sh/$(basename $1);\n}\n\nalias transfer=transfer\n```\n\n## Add alias for fish-shell\n\n### Using curl\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        # write to output to tmpfile because of progress bar\n        set -l tmpfile ( mktemp -t transferXXX )\n        curl --progress-bar --upload-file \"$argv[1]\" https://transfer.sh/(basename $argv[1]) >> $tmpfile\n        cat $tmpfile\n        command rm -f $tmpfile\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\n### Using wget\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        wget -t 1 -qO - --method=PUT --body-file=\"$argv[1]\" --header=\"Content-Type: (file -b --mime-type $argv[1])\" https://transfer.sh/(basename $argv[1])\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\nNow run it like this:\n```bash\n$ transfer test.txt\n```\n\n## Add alias on Windows\n\nPut a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development) | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, grdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n\n## Development\n\nMake sure your GOPATH is set correctly.\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\n```bash\ngo build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we've created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n## Copyright and license\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode released under [the MIT license](LICENSE).\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Encrypt &amp; upload:",
            "excerpt": "Easy and fast file sharing from the command-line. This code contains the server with everything you need to create your own instance.\n\nTransfer.sh currently supports the s3 (Amazon S3), gdrive (Google Drive) providers, and local file system (local).\n\n## Usage\n\n### Upload:\n```bash\n$ curl --upload-file ./hello.txt https://transfer.sh/hello.txt\n```\n\n### Encrypt & upload:\n```bash\n$ cat /tmp/hello.txt|gpg -ac -o-|curl -X PUT --upload-file \"-\" https://transfer.sh/test.txt\n````\n\n### Download & decrypt:\n```bash\n$ curl https://transfer.sh/1lDau/test.txt|gpg -o- > /tmp/hello.txt\n```\n\n### Upload to virustotal:\n```bash\n$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n\n## Add alias to .bashrc or .zshrc\n\n### Using curl\n```bash\ntransfer() {\n    curl --progress-bar --upload-file \"$1\" https://transfer.sh/$(basename $1) | tee /dev/null;\n}\n\nalias transfer=transfer\n```\n\n### Using wget\n```bash\ntransfer() {\n    wget -t 1 -qO - --method=PUT --body-file=\"$1\" --header=\"Content-Type: $(file -b --mime-type $1)\" https://transfer.sh/$(basename $1);\n}\n\nalias transfer=transfer\n```\n\n## Add alias for fish-shell\n\n### Using curl\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        # write to output to tmpfile because of progress bar\n        set -l tmpfile ( mktemp -t transferXXX )\n        curl --progress-bar --upload-file \"$argv[1]\" https://transfer.sh/(basename $argv[1]) >> $tmpfile\n        cat $tmpfile\n        command rm -f $tmpfile\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\n### Using wget\n```bash\nfunction transfer --description 'Upload a file to transfer.sh'\n    if [ $argv[1] ]\n        wget -t 1 -qO - --method=PUT --body-file=\"$argv[1]\" --header=\"Content-Type: (file -b --mime-type $argv[1])\" https://transfer.sh/(basename $argv[1])\n    else\n        echo 'usage: transfer FILE_TO_TRANSFER'\n    end\nend\n\nfuncsave transfer\n```\n\nNow run it like this:\n```bash\n$ transfer test.txt\n```\n\n## Add alias on Windows\n\nPut a file called `transfer.cmd` somewhere in your PATH with this inside it:\n```cmd\n@echo off\nsetlocal\n:: use env vars to pass names to PS, to avoid escaping issues\nset FN=%~nx1\nset FULL=%1\npowershell -noprofile -command \"$(Invoke-Webrequest -Method put -Infile $Env:FULL https://transfer.sh/$Env:FN).Content\"\n```\n\n## Link aliases\n\nCreate direct download link:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/get/1lDau/test.txt\n\nInline file:\n\nhttps://transfer.sh/1lDau/test.txt --> https://transfer.sh/inline/1lDau/test.txt\n\n## Usage\n\nParameter | Description | Value | Env\n--- | --- | --- | ---\nlistener | port to use for http (:80) | |\nprofile-listener | port to use for profiler (:6060)| |\nforce-https | redirect to https | false |\ntls-listener | port to use for https (:443) | |\ntls-listener-only | flag to enable tls listener only | |\ntls-cert-file | path to tls certificate | |\ntls-private-key | path to tls private key | |\nhttp-auth-user | user for basic http auth on upload | |\nhttp-auth-pass | pass for basic http auth on upload | |\ntemp-path | path to temp folder | system temp |\nweb-path | path to static web files (for development) | |\nga-key | google analytics key for the front end | |\nuservoice-key | user voice key for the front end  | |\nprovider | which storage provider to use | (s3, grdrive or local) |\naws-access-key | aws access key | | AWS_ACCESS_KEY\naws-secret-key | aws access key | | AWS_SECRET_KEY\nbucket | aws bucket | | BUCKET\nbasedir | path storage for local/gdrive provider| |\ngdrive-client-json-filepath | path to oauth client json config for gdrive provider| |\ngdrive-local-config-path | path to store local transfer.sh config cache for gdrive provider| |\nlets-encrypt-hosts | hosts to use for lets encrypt certificates (comma seperated) | |\nlog | path to log file| |\n\nIf you want to use TLS using lets encrypt certificates, set lets-encrypt-hosts to your domain, set tls-listener to :443 and enable force-https.\n\nIf you want to use TLS using your own certificates, set tls-listener to :443, force-https, tls-cert=file and tls-private-key.\n\n## Development\n\nMake sure your GOPATH is set correctly.\n\n```bash\ngo run main.go --provider=local --listener :8080 --temp-path=/tmp/ --basedir=/tmp/\n```\n\n## Build\n\n```bash\ngo build -o transfersh main.go\n```\n\n## Docker\n\nFor easy deployment, we've created a Docker container.\n\n```bash\ndocker run --publish 8080:8080 dutchcoders/transfer.sh:latest --provider local --basedir /tmp/\n```\n\n## Contributions\n\nContributions are welcome.\n\n## Creators\n\n**Remco Verhoef**\n- <https://twitter.com/remco_verhoef>\n- <https://twitter.com/dutchcoders>\n\n**Uvis Grinfelds**\n\n## Maintainer\n\n**Andrea Spacca**\n\n## Copyright and license\n\nCode and documentation copyright 2011-2018 Remco Verhoef.\nCode released under [the MIT license](LICENSE).\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        },
        {
            "originalHeader": "Upload to virustotal:",
            "excerpt": "$ curl -X PUT --upload-file nhgbhhj https://transfer.sh/test.txt/virustotal\n```\n",
            "parentHeader": [
                "transfer.sh <a href=\"https://gitter.im/dutchcoders/transfer.sh?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img alt=\"Gitter\" src=\"https://badges.gitter.im/Join%20Chat.svg\" /></a> <a href=\"https://goreportcard.com/report/github.com/dutchcoders/transfer.sh\"><img alt=\"Go Report Card\" src=\"https://goreportcard.com/badge/github.com/dutchcoders/transfer.sh\" /></a> <a href=\"https://hub.docker.com/r/dutchcoders/transfer.sh/\"><img alt=\"Docker pulls\" src=\"https://img.shields.io/docker/pulls/dutchcoders/transfer.sh.svg\" /></a> <a href=\"https://travis-ci.org/dutchcoders/transfer.sh\"><img alt=\"Build Status\" src=\"https://travis-ci.org/dutchcoders/transfer.sh.svg?branch=master\" /></a>",
                "Usage"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        }
    ],
    "codeRepository": {
        "excerpt": "https://github.com/KnowledgeCaptureAndDiscovery/publisher",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "owner": {
        "excerpt": "KnowledgeCaptureAndDiscovery",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "ownerType": {
        "excerpt": "Organization",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateCreated": {
        "excerpt": "2019-02-05T02:29:11Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateModified": {
        "excerpt": "2019-03-09T13:39:03Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "description": [
        {
            "excerpt": "Easy and fast file sharing from the command-line.",
            "confidence": [
                1.0
            ],
            "technique": "GitHub API"
        }
    ],
    "name": {
        "excerpt": "publisher",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "fullName": {
        "excerpt": "KnowledgeCaptureAndDiscovery/publisher",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "issueTracker": {
        "excerpt": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/publisher/issues",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksUrl": {
        "excerpt": "https://api.github.com/repos/KnowledgeCaptureAndDiscovery/publisher/forks",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "downloadUrl": {
        "excerpt": "https://github.com/KnowledgeCaptureAndDiscovery/publisher/releases",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "stargazersCount": {
        "excerpt": {
            "count": 0,
            "date": "Wed, 18 May 2022 21:13:20 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksCount": {
        "excerpt": {
            "count": 0,
            "date": "Wed, 18 May 2022 21:13:20 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "languages": {
        "excerpt": [
            "Go",
            "Shell",
            "Dockerfile"
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "licenseText": {
        "excerpt": "b'The MIT License (MIT)\\n\\nCopyright (c) 2016 Yasuhiro Matsumoto\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n'",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "readmeUrl": {
        "excerpt": "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/README.md",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "contributors": {
        "excerpt": "This source code was written by the Go contributors.\nThe master list of contributors is in the main Go distribution,\nvisible at http://tip.golang.org/CONTRIBUTORS.",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "contributingGuidelines": {
        "excerpt": "Contributing to godoc.org\nContributions to this project are welcome, though please\nfile an issue.\nbefore starting work on anything major.\nWe do not accept GitHub pull requests\n(we use an instance of the\nGerrit code review system instead).\nTo get started contributing to this project,\nclone the repository from its canonical location\ngit clone https://go.googlesource.com/gddo\n\nor update the origin of your existing clone\ngit remote rm origin\ngit remote add origin https://go.googlesource.com/gddo\n\nthen read the Contribution Guidelines\nto learn how to send patches using Gerrit.",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "hasBuildFile": [
        {
            "excerpt": [
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/docker-compose.yml"
            ],
            "confidence": [
                1.0
            ],
            "technique": "File Exploration",
            "format": "Docker compose file"
        },
        {
            "excerpt": [
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/Dockerfile",
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/net/http2/Dockerfile",
                "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/github.com/golang/gddo/Dockerfile"
            ],
            "confidence": [
                1.0
            ],
            "technique": "File Exploration",
            "format": "Docker file"
        }
    ],
    "hasScriptFile": {
        "excerpt": [
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/regen-gapic.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/run-tests.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/translate/internal/translate/v2/regen.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/internal/version/update_version.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/internal/kokoro/build.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/cloud.google.com/go/profiler/integration-test.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/sys/plan9/mkall.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/sys/plan9/mkerrors.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/sys/plan9/mksysnum_plan9.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/sys/unix/mkall.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/golang.org/x/sys/unix/mkerrors.sh",
            "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/publisher/master/vendor/github.com/golang/gddo/talksapp/setup.sh"
        ],
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    }
}