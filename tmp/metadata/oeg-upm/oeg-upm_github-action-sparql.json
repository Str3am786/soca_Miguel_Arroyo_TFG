{
    "description": [
        {
            "excerpt": "`SPARQL-Validator` is a GitHub Action that checks whether the SPARQL queries included in one or multiple `.sparql` files are well formed. The action evaluates each of the queries found in the repository in the SPARQL endpoint specified as a parameter. If the status obtained after evaluating this query is `400`, this means that the file is not well formed and the action will fail. Independently of the result of the execution, the action will put a comment in the pull request with the results of the execution.\n \n",
            "confidence": [
                [
                    0.9619467827305231
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "SPARQL-Validator"
        },
        {
            "excerpt": "The owner of the repository, it is taken from `${{ github.repository_owner }}`.  \n",
            "confidence": [
                [
                    0.9941694056607938
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`owner`",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "The account access token, it is taken from `${{ secrets.GITHUB_TOKEN }}`.  \n",
            "confidence": [
                [
                    0.9343867295694336
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`token`",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "The account that created the pull request, it is taken from `${{ github.actor }}`.  \n",
            "confidence": [
                [
                    0.9432111838201572
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`actor`",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "The graph_uri for the SPARQL query.  \n",
            "confidence": [
                [
                    0.9559430727329502
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`graph_uri`(optional)",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "The format of the output of the query. \n",
            "confidence": [
                [
                    0.9278773735221578
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`format`(optional)",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "`None` indicates that the results are not stored in the repository. \n",
            "confidence": [
                [
                    0.9601126137520113
                ]
            ],
            "technique": "Supervised classification",
            "originalHeader": "`path`(optional)",
            "parentHeader": [
                "SPARQL-Validator",
                "Inputs"
            ]
        },
        {
            "excerpt": "Repository for the GitHub Action to send a SPARQL query to a SPARQL endpoint",
            "confidence": [
                1.0
            ],
            "technique": "GitHub API"
        }
    ],
    "longTitle": {
        "excerpt": "SPARQL-Validator",
        "confidence": [
            1.0
        ],
        "technique": "Regular expression"
    },
    "usage": [
        {
            "originalHeader": "Usage",
            "excerpt": "Create a `.github.workflows/[name].yaml` file in the repository.\n\nExample workflow:\n```\nname: [name]\non:   \n  pull_request:\n    branches: [master]\n\njobs:    \n  [name]:\n    runs-on: ubuntu-latest\n    name: [name]\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n      \n      - name: github-action-sparql\n        uses: oeg-upm/github-action-sparql@v1.0.0\n        id: 'github-action-sparql'\n        with:\n          owner: ${{ github.repository_owner }}\n          repo: ${{ github.event.repository.name }}\n          pr_number: ${{ github.event.number }}\n          token: ${{ secrets.GITHUB_TOKEN }}\n          actor: ${{ github.actor }}\n          endpoint: '[endpoint]'\n          graph_uri: [uri]\n          format: [format]\n          path: [path]\n\n      - name: update files and push to branch\n        if: always()\n        run: |\n          git config --global user.name \"github-actions[bot]\"\n          git config --global user.email \"41898282+github-actions[bot]@users.noreply.github.com\"\n\n          git add -A\n          git commit -m \"Output ${{ github.actor }} - ${{ github.event.number }}\" --allow-empty\n          git push origin HEAD:${{ github.head_ref }} --force\n```",
            "parentHeader": [
                "SPARQL-Validator"
            ],
            "confidence": [
                1.0
            ],
            "technique": "Header extraction"
        }
    ],
    "codeRepository": {
        "excerpt": "https://github.com/oeg-upm/github-action-sparql",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "owner": {
        "excerpt": "oeg-upm",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "ownerType": {
        "excerpt": "Organization",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateCreated": {
        "excerpt": "2022-03-13T09:17:16Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "dateModified": {
        "excerpt": "2022-05-10T14:49:04Z",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "license": {
        "excerpt": {
            "name": "Apache License 2.0",
            "url": "https://api.github.com/licenses/apache-2.0"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "name": {
        "excerpt": "github-action-sparql",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "fullName": {
        "excerpt": "oeg-upm/github-action-sparql",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "issueTracker": {
        "excerpt": "https://api.github.com/repos/oeg-upm/github-action-sparql/issues",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksUrl": {
        "excerpt": "https://api.github.com/repos/oeg-upm/github-action-sparql/forks",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "downloadUrl": {
        "excerpt": "https://github.com/oeg-upm/github-action-sparql/releases",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "stargazersCount": {
        "excerpt": {
            "count": 6,
            "date": "Wed, 18 May 2022 07:43:04 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "forksCount": {
        "excerpt": {
            "count": 1,
            "date": "Wed, 18 May 2022 07:43:04 GMT"
        },
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "languages": {
        "excerpt": [
            "JavaScript"
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "licenseText": {
        "excerpt": "b'# ISC License\\n\\nCopyright (c) 2018, Gregor Martynus (https://github.com/gr2m)\\n\\nPermission to use, copy, modify, and/or distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\n'",
        "confidence": [
            1.0
        ],
        "technique": "File Exploration"
    },
    "readmeUrl": {
        "excerpt": "https://raw.githubusercontent.com/oeg-upm/github-action-sparql/main/README.md",
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    },
    "releases": {
        "excerpt": [
            {
                "tagName": "v0.1",
                "name": "Initial release",
                "authorName": "ocorcho",
                "authorType": "User",
                "body": "",
                "tarballUrl": "https://api.github.com/repos/oeg-upm/github-action-sparql/tarball/v0.1",
                "zipballUrl": "https://api.github.com/repos/oeg-upm/github-action-sparql/zipball/v0.1",
                "htmlUrl": "https://github.com/oeg-upm/github-action-sparql/releases/tag/v0.1",
                "url": "https://api.github.com/repos/oeg-upm/github-action-sparql/releases/62251700",
                "dateCreated": "2022-03-15T18:27:01Z",
                "datePublished": "2022-03-19T16:50:51Z"
            }
        ],
        "confidence": [
            1.0
        ],
        "technique": "GitHub API"
    }
}